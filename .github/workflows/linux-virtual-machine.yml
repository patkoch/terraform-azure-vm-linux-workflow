name: Deploy or Destroy Linux Virtual Machine

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'deploy'
        type: choice
        options:
          - deploy
          - destroy
  
jobs:

  verification:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

      - name: Check if the storage account exists
        run: az storage account show --name stdemodevwesteu001 --resource-group azureworkshop-demo-rg
      
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: latest

      - name: Run TFLint
        run: |
          tflint --init
          tflint --format=compact

  deploy:
    if: github.event.inputs.action == 'deploy'
    needs: verification
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Update Terraform Variables - Admin Password
        run: |
          echo "virtual_machine_admin_password  = \"${{ secrets.VIRTUAL_MACHINE_ADMIN_PASSWORD }}\"" >> terraform.auto.tfvars
          echo "" >> terraform.auto.tfvars
      
      - name: Update Terraform Variables - Subscription ID
        run: |
          echo "subscription_id = \"${{ secrets.SUBSCRIPTION_ID }}\"" >> terraform.auto.tfvars
          echo "" >> terraform.auto.tfvars
      
      - name: Create Public SSH Key File
        run: |
          
          # Create public key file from secret
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > id_rsa.pub

      - name: Terraform Initialize 
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

  destroy:
    if: github.event.inputs.action == 'destroy'
    needs: verification
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Initialize 
        run: terraform init
      
      - name: Update Terraform Variables - Admin Password
        run: |
          echo "virtual_machine_admin_password  = \"${{ secrets.VIRTUAL_MACHINE_ADMIN_PASSWORD }}\"" >> terraform.auto.tfvars
          echo "" >> terraform.auto.tfvars
      
      - name: Update Terraform Variables - Subscription ID
        run: |
          echo "subscription_id = \"${{ secrets.SUBSCRIPTION_ID }}\"" >> terraform.auto.tfvars
          echo "" >> terraform.auto.tfvars
      
      - name: Create Public SSH Key File
        run: |
          
          # Create public key file from secret
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > id_rsa.pub

      - name: Terraform Destroy
        run: terraform destroy -auto-approve